{"version":3,"file":"static/2477.37939dfd.chunk.js","mappings":"qMAMA,MAAMA,EAAa,IAAM,CACvB,MAAMC,KAAW,MAAY,EACvB,CACJ,KAAAC,EACA,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,WAAAC,EACA,cAAAC,EACA,QAAAC,EACA,WAAAC,CACF,KAAI,MAAU,EACRC,KAAkBC,EAAA,GAAYV,EAAS,MAAM,EACnD,sBAAU,IAAM,CACd,GAAIA,EAAS,SAAWS,EACtB,OAEF,MAAME,EAAQ,UAASX,EAAS,OAAO,UAAU,CAAC,EAAG,CAAE,WAAY,CAAE,CAAC,GAAK,CAAC,EACxEW,EAAM,SACRH,EAAWG,EAAM,OAAO,EAEtBA,EAAM,OACRT,EAAQS,EAAM,KAAK,EAEjBA,EAAM,YACRL,EAAcK,EAAM,UAAU,EAE5BA,EAAM,OACRP,EAASO,EAAM,KAAK,CAExB,EAAG,CAACF,EAAiBT,EAAUE,EAASE,EAAUE,EAAeE,CAAU,CAAC,KAC5E,aAAU,IAAM,CACd,MAAMI,EAAY,cAChB,CACE,MAAOX,EACP,MAAAE,EACA,WAAAE,EACA,QAAAE,CACF,EACA,CAAE,YAAa,UAAW,CAC5B,EACMM,EAAS,GAAG,OAAO,SAAS,QAAQ,IAAID,CAAS,GACvD,OAAO,QAAQ,aAAa,KAAM,SAAS,MAAOC,CAAM,CAC1D,EAAG,CAACZ,EAAME,EAAOE,EAAYE,CAAO,CAAC,EAC9B,IACT,EACMO,EAAa,IAAM,CACvB,MAAMC,KAAS,MAAU,EACzB,OAAuB,gBAAoB,KAAuB,KAAsB,gBAAoBhB,EAAY,IAAI,EAAGgB,CAAM,CACvI,C","sources":["webpack://app/../../node_modules/@backstage/plugin-search/dist/components/SearchPage/SearchPage.esm.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport usePrevious from 'react-use/esm/usePrevious';\nimport qs from 'qs';\nimport { useOutlet, useLocation } from 'react-router-dom';\nimport { SearchContextProvider, useSearch } from '@backstage/plugin-search-react';\n\nconst UrlUpdater = () => {\n  const location = useLocation();\n  const {\n    term,\n    setTerm,\n    types,\n    setTypes,\n    pageCursor,\n    setPageCursor,\n    filters,\n    setFilters\n  } = useSearch();\n  const prevQueryParams = usePrevious(location.search);\n  useEffect(() => {\n    if (location.search === prevQueryParams) {\n      return;\n    }\n    const query = qs.parse(location.search.substring(1), { arrayLimit: 0 }) || {};\n    if (query.filters) {\n      setFilters(query.filters);\n    }\n    if (query.query) {\n      setTerm(query.query);\n    }\n    if (query.pageCursor) {\n      setPageCursor(query.pageCursor);\n    }\n    if (query.types) {\n      setTypes(query.types);\n    }\n  }, [prevQueryParams, location, setTerm, setTypes, setPageCursor, setFilters]);\n  useEffect(() => {\n    const newParams = qs.stringify(\n      {\n        query: term,\n        types,\n        pageCursor,\n        filters\n      },\n      { arrayFormat: \"brackets\" }\n    );\n    const newUrl = `${window.location.pathname}?${newParams}`;\n    window.history.replaceState(null, document.title, newUrl);\n  }, [term, types, pageCursor, filters]);\n  return null;\n};\nconst SearchPage = () => {\n  const outlet = useOutlet();\n  return /* @__PURE__ */ React.createElement(SearchContextProvider, null, /* @__PURE__ */ React.createElement(UrlUpdater, null), outlet);\n};\n\nexport { SearchPage, UrlUpdater };\n//# sourceMappingURL=SearchPage.esm.js.map\n"],"names":["UrlUpdater","location","term","setTerm","types","setTypes","pageCursor","setPageCursor","filters","setFilters","prevQueryParams","usePrevious","query","newParams","newUrl","SearchPage","outlet"],"sourceRoot":""}