{"version":3,"file":"static/116.94887ece.chunk.js","mappings":"8ZASA,MAAMA,EAAiB,CACrB,IAAa,QAAQ,kBAAkB,CAAE,OAAQ,EAAK,CAAC,EACvD,IAAa,QAAQ,iBAAiB,CAAE,YAAa,KAAM,CAAC,EAC5D,IAAa,QAAQ,mBAAmB,EACxC,IAAa,QAAQ,kBAAkB,EACvC,IAAa,QAAQ,qBAAqB,EAC1C,IAAa,QAAQ,0BAA0B,EAC/C,IAAa,QAAQ,gCAAgC,EACrD,IAAa,QAAQ,iBAAiB,CACxC,EACMC,EAA0BC,GAAU,C,MACxC,KAAM,CACJ,wBAAAC,EAA0B,MAC1B,QAAAC,EACA,QAAAC,EACA,gBAAAC,CACF,EAAIJ,EAEEK,EAAoB,IAAG,KADX,MAAO,GAAY,EACE,kBAAkB,mBAAmB,IAA/C,OAAoD,WAAW,gBACtFC,KAAwB,KAAY,GAAyB,EAC7D,CAAE,QAAAC,CAAQ,KAAI,KAAc,CAChC,WAAY,IACd,CAAC,EACD,OAAuB,gBACrB,IACA,CACE,QAAS,OACT,MAAO,OACP,SAAUF,EACV,kBAAmB,MACrB,EACgB,gBAAoB,IAAS,KAAsB,gBAAoB,IAAe,CAAE,MAAO,EAAG,EAAGE,GAA2B,gBAC9I,IACA,CACE,MAAO,wBACP,GAAID,GAAA,YAAAA,GACN,CACF,EAAmB,gBAAoB,IAAe,KAAM,eAAe,CAAC,EAAmB,gBAAoB,KAAoB,KAAsB,gBAAoB,KAAqB,KAAsB,gBAAoB,KAAoB,QAAS,KAAsB,gBAAoB,IAAkB,CAAE,cAAe,MAAO,OAAQ,EAAK,CAAC,EAAmB,gBAAoB,IAAkB,IAAI,EAAmB,gBAAoB,IAAgB,CAAE,cAAeL,CAAwB,CAAC,EAAmB,gBAAoB,IAAmB,CAAE,KAAMG,CAAgB,CAAC,EAAmB,gBAAoB,IAAuB,IAAI,EAAmB,gBAAoB,IAAiB,IAAI,CAAC,EAAmB,gBAAoB,KAAoB,QAAS,KAAsB,gBACvzB,IACA,CACE,QAASF,GAAWJ,EACpB,QAAAK,CACF,CACF,CAAC,CAAC,CAAC,CAAC,CACN,CACF,EClDMK,EAAmBR,MACR,MAAU,GACQ,gBAAoBD,EAAwB,CAAE,GAAGC,CAAM,CAAC,C","sources":["webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/components/ApiExplorerPage/DefaultApiExplorerPage.esm.js","webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/components/ApiExplorerPage/ApiExplorerPage.esm.js"],"sourcesContent":["import { PageWithHeader, Content, ContentHeader, CreateButton, SupportButton } from '@backstage/core-components';\nimport { useApi, configApiRef, useRouteRef } from '@backstage/core-plugin-api';\nimport { CatalogTable } from '@backstage/plugin-catalog';\nimport { EntityListProvider, CatalogFilterLayout, EntityKindPicker, EntityTypePicker, UserListPicker, EntityOwnerPicker, EntityLifecyclePicker, EntityTagPicker } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { registerComponentRouteRef } from '../../routes.esm.js';\nimport { usePermission } from '@backstage/plugin-permission-react';\nimport { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';\n\nconst defaultColumns = [\n  CatalogTable.columns.createTitleColumn({ hidden: true }),\n  CatalogTable.columns.createNameColumn({ defaultKind: \"API\" }),\n  CatalogTable.columns.createSystemColumn(),\n  CatalogTable.columns.createOwnerColumn(),\n  CatalogTable.columns.createSpecTypeColumn(),\n  CatalogTable.columns.createSpecLifecycleColumn(),\n  CatalogTable.columns.createMetadataDescriptionColumn(),\n  CatalogTable.columns.createTagsColumn()\n];\nconst DefaultApiExplorerPage = (props) => {\n  const {\n    initiallySelectedFilter = \"all\",\n    columns,\n    actions,\n    ownerPickerMode\n  } = props;\n  const configApi = useApi(configApiRef);\n  const generatedSubtitle = `${configApi.getOptionalString(\"organization.name\") ?? \"Backstage\"} API Explorer`;\n  const registerComponentLink = useRouteRef(registerComponentRouteRef);\n  const { allowed } = usePermission({\n    permission: catalogEntityCreatePermission\n  });\n  return /* @__PURE__ */ React.createElement(\n    PageWithHeader,\n    {\n      themeId: \"apis\",\n      title: \"APIs\",\n      subtitle: generatedSubtitle,\n      pageTitleOverride: \"APIs\"\n    },\n    /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(ContentHeader, { title: \"\" }, allowed && /* @__PURE__ */ React.createElement(\n      CreateButton,\n      {\n        title: \"Register Existing API\",\n        to: registerComponentLink?.()\n      }\n    ), /* @__PURE__ */ React.createElement(SupportButton, null, \"All your APIs\")), /* @__PURE__ */ React.createElement(EntityListProvider, null, /* @__PURE__ */ React.createElement(CatalogFilterLayout, null, /* @__PURE__ */ React.createElement(CatalogFilterLayout.Filters, null, /* @__PURE__ */ React.createElement(EntityKindPicker, { initialFilter: \"api\", hidden: true }), /* @__PURE__ */ React.createElement(EntityTypePicker, null), /* @__PURE__ */ React.createElement(UserListPicker, { initialFilter: initiallySelectedFilter }), /* @__PURE__ */ React.createElement(EntityOwnerPicker, { mode: ownerPickerMode }), /* @__PURE__ */ React.createElement(EntityLifecyclePicker, null), /* @__PURE__ */ React.createElement(EntityTagPicker, null)), /* @__PURE__ */ React.createElement(CatalogFilterLayout.Content, null, /* @__PURE__ */ React.createElement(\n      CatalogTable,\n      {\n        columns: columns || defaultColumns,\n        actions\n      }\n    )))))\n  );\n};\n\nexport { DefaultApiExplorerPage };\n//# sourceMappingURL=DefaultApiExplorerPage.esm.js.map\n","import React from 'react';\nimport { useOutlet } from 'react-router-dom';\nimport { DefaultApiExplorerPage } from './DefaultApiExplorerPage.esm.js';\n\nconst ApiExplorerPage = (props) => {\n  const outlet = useOutlet();\n  return outlet || /* @__PURE__ */ React.createElement(DefaultApiExplorerPage, { ...props });\n};\n\nexport { ApiExplorerPage };\n//# sourceMappingURL=ApiExplorerPage.esm.js.map\n"],"names":["defaultColumns","DefaultApiExplorerPage","props","initiallySelectedFilter","columns","actions","ownerPickerMode","generatedSubtitle","registerComponentLink","allowed","ApiExplorerPage"],"sourceRoot":""}