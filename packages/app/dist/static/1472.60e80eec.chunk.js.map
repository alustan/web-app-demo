{"version":3,"file":"static/1472.60e80eec.chunk.js","mappings":"oOAQA,MAAMA,KAAY,KAAW,CAC3B,cAAe,CACb,SAAU,MACZ,EACA,SAAU,CACR,MAAO,OACP,aAAc,MAChB,CACF,CAAC,EACKC,EAAgCC,GAAU,CAC9C,KAAM,CACJ,OAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,EACZ,WAAAC,EAAa,GACb,OAAAC,EAAS,GACT,MAAAC,EACA,KAAAC,CACF,EAAIP,EACEQ,EAAUV,EAAU,EACpBW,EAAc,CAAC,CAAE,SAAAC,CAAS,IAAML,EAAyB,gBAAoB,KAAM,CAAE,QAAS,GAAM,GAAIJ,EAAO,QAAS,EAAGS,CAAQ,EAAoB,gBAAoB,WAAgB,KAAMA,CAAQ,EACzMC,EAAW,IAAM,CACrB,MAAMC,EAAcV,GAAA,MAAAA,EAAW,OAAO,MAAwB,gBAC5D,IACA,CACE,KAAMA,EAAU,OAAO,MACvB,OAAQA,EAAU,OAClB,QAASA,EAAU,OACrB,CACF,EAAID,EAAO,MACLY,EAAcX,GAAA,MAAAA,EAAW,OAAO,YAA8B,gBAClE,IACA,CACE,KAAMA,EAAU,OAAO,YACvB,OAAQA,EAAU,OAClB,QAASA,EAAU,OACrB,CACF,EAAID,EAAO,YACLa,EAAaZ,GAAA,MAAAA,EAAW,OAAO,KAAuB,gBAC1D,IACA,CACE,KAAMA,EAAU,OAAO,KACvB,OAAQA,EAAU,OAClB,QAASA,EAAU,OACrB,CACF,EAAID,EAAO,KACX,OAAKA,EACkB,gBACrB,IACA,CACE,UAAWO,EAAQ,SACnB,uBAAwB,CAAE,QAAS,IAAK,EACxC,QAAyB,gBAAoBC,EAAa,KAAMH,GAAgC,gBAAoB,WAAgB,KAAMM,EAAa,MAAOC,GAAA,KAAAA,EAAeC,EAAY,OAAO,CAAC,EACjM,UAA2B,gBACzB,IACA,CACE,UAAW,OACX,MAAO,CACL,QAAS,cACT,gBAAiB,WACjB,gBAAiBX,EACjB,SAAU,QACZ,EACA,MAAO,gBACP,QAAS,OACX,EACAD,GAAA,MAAAA,EAAW,OAAO,KAAuB,gBACvC,IACA,CACE,KAAMA,EAAU,OAAO,KACvB,OAAQA,EAAU,OAClB,QAASA,EAAU,OACrB,CACF,EAAID,EAAO,IACb,CACF,CACF,EA9BoB,IA+BtB,EACMc,EAAkB,CAAC,CAAE,SAAAL,CAAS,IAAMN,EAA6B,gBAAoB,WAAgB,KAAMG,GAAwB,gBAAoB,IAAc,KAAM,OAAOA,GAAS,WAAaA,EAAKN,CAAM,EAAIM,CAAI,EAAmB,gBAAoB,MAAO,CAAE,UAAWC,EAAQ,aAAc,EAAGE,CAAQ,CAAC,EAAoB,gBAAoB,WAAgB,KAAMA,CAAQ,EACpY,OAAuB,gBAAoBK,EAAiB,KAAsB,gBAAoBJ,EAAU,IAAI,CAAC,CACvH,C","sources":["webpack://app/../../node_modules/@backstage/plugin-techdocs/dist/search/components/TechDocsSearchResultListItem.esm.js"],"sourcesContent":["import React from 'react';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from '@backstage/core-components';\nimport { HighlightedSearchResultText } from '@backstage/plugin-search-react';\n\nconst useStyles = makeStyles({\n  flexContainer: {\n    flexWrap: \"wrap\"\n  },\n  itemText: {\n    width: \"100%\",\n    marginBottom: \"1rem\"\n  }\n});\nconst TechDocsSearchResultListItem = (props) => {\n  const {\n    result,\n    highlight,\n    lineClamp = 5,\n    asListItem = true,\n    asLink = true,\n    title,\n    icon\n  } = props;\n  const classes = useStyles();\n  const LinkWrapper = ({ children }) => asLink ? /* @__PURE__ */ React.createElement(Link, { noTrack: true, to: result.location }, children) : /* @__PURE__ */ React.createElement(React.Fragment, null, children);\n  const TextItem = () => {\n    const resultTitle = highlight?.fields.title ? /* @__PURE__ */ React.createElement(\n      HighlightedSearchResultText,\n      {\n        text: highlight.fields.title,\n        preTag: highlight.preTag,\n        postTag: highlight.postTag\n      }\n    ) : result.title;\n    const entityTitle = highlight?.fields.entityTitle ? /* @__PURE__ */ React.createElement(\n      HighlightedSearchResultText,\n      {\n        text: highlight.fields.entityTitle,\n        preTag: highlight.preTag,\n        postTag: highlight.postTag\n      }\n    ) : result.entityTitle;\n    const resultName = highlight?.fields.name ? /* @__PURE__ */ React.createElement(\n      HighlightedSearchResultText,\n      {\n        text: highlight.fields.name,\n        preTag: highlight.preTag,\n        postTag: highlight.postTag\n      }\n    ) : result.name;\n    if (!result) return null;\n    return /* @__PURE__ */ React.createElement(\n      ListItemText,\n      {\n        className: classes.itemText,\n        primaryTypographyProps: { variant: \"h6\" },\n        primary: /* @__PURE__ */ React.createElement(LinkWrapper, null, title ? title : /* @__PURE__ */ React.createElement(React.Fragment, null, resultTitle, \" | \", entityTitle ?? resultName, \" docs\")),\n        secondary: /* @__PURE__ */ React.createElement(\n          Typography,\n          {\n            component: \"span\",\n            style: {\n              display: \"-webkit-box\",\n              WebkitBoxOrient: \"vertical\",\n              WebkitLineClamp: lineClamp,\n              overflow: \"hidden\"\n            },\n            color: \"textSecondary\",\n            variant: \"body2\"\n          },\n          highlight?.fields.text ? /* @__PURE__ */ React.createElement(\n            HighlightedSearchResultText,\n            {\n              text: highlight.fields.text,\n              preTag: highlight.preTag,\n              postTag: highlight.postTag\n            }\n          ) : result.text\n        )\n      }\n    );\n  };\n  const ListItemWrapper = ({ children }) => asListItem ? /* @__PURE__ */ React.createElement(React.Fragment, null, icon && /* @__PURE__ */ React.createElement(ListItemIcon, null, typeof icon === \"function\" ? icon(result) : icon), /* @__PURE__ */ React.createElement(\"div\", { className: classes.flexContainer }, children)) : /* @__PURE__ */ React.createElement(React.Fragment, null, children);\n  return /* @__PURE__ */ React.createElement(ListItemWrapper, null, /* @__PURE__ */ React.createElement(TextItem, null));\n};\n\nexport { TechDocsSearchResultListItem };\n//# sourceMappingURL=TechDocsSearchResultListItem.esm.js.map\n"],"names":["useStyles","TechDocsSearchResultListItem","props","result","highlight","lineClamp","asListItem","asLink","title","icon","classes","LinkWrapper","children","TextItem","resultTitle","entityTitle","resultName","ListItemWrapper"],"sourceRoot":""}